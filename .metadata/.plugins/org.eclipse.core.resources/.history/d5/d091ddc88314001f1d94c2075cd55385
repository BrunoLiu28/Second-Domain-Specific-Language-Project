/*
 * generated by Xtext 2.34.0
 */
package org.xtext.example.mydsl.ui.quickfix;


import org.eclipse.jface.text.BadLocationException;
import org.eclipse.xtext.ui.editor.model.IXtextDocument;
import org.eclipse.xtext.ui.editor.model.XtextDocument;
import org.eclipse.xtext.ui.editor.quickfix.DefaultQuickfixProvider;
import org.eclipse.xtext.ui.editor.quickfix.Fix;
import org.eclipse.xtext.ui.editor.quickfix.IssueResolutionAcceptor;
import org.eclipse.xtext.validation.Issue;
import org.xtext.example.mydsl.validation.SimpleMioValidator;

/**
 * Custom quickfixes.
 *
 * See https://www.eclipse.org/Xtext/documentation/310_eclipse_support.html#quick-fixes
 */
public class SimpleMioQuickfixProvider extends DefaultQuickfixProvider {

//	@Fix(SimpleMioValidator.INVALID_NAME)
//	public void capitalizeName(final Issue issue, IssueResolutionAcceptor acceptor) {
//		acceptor.accept(issue, "Capitalize name", "Capitalize the name.", "upcase.png", new IModification() {
//			public void apply(IModificationContext context) throws BadLocationException {
//				IXtextDocument xtextDocument = context.getXtextDocument();
//				String firstLetter = xtextDocument.get(issue.getOffset(), 1);
//				xtextDocument.replace(issue.getOffset(), 1, firstLetter.toUpperCase());
//			}
//		});
//	}
	
	@Fix(SimpleMioValidator.INVALID_SENSOR_SPECIFIER)
    public void fixInvalidSensorSpecifier(final Issue issue, IssueResolutionAcceptor acceptor) {
        acceptor.accept(issue, "Set to 'front'", "Set the specifier to 'front'.", "up.png", context -> {
            updateSensorSpecifier(context.getXtextDocument(), issue, "front");
        });
        acceptor.accept(issue, "Set to 'left'", "Set the specifier to 'left'.", "left.png", context -> {
            updateSensorSpecifier(context.getXtextDocument(), issue, "left");
        });
        acceptor.accept(issue, "Set to 'right'", "Set the specifier to 'right'.", "right.png", context -> {
            updateSensorSpecifier(context.getXtextDocument(), issue, "right");
        });
        acceptor.accept(issue, "Set to 'back'", "Set the specifier to 'back'.", "down.png", context -> {
            updateSensorSpecifier(context.getXtextDocument(), issue, "back");
        });
    }
	
	protected void updateSensorSpecifier(IXtextDocument iXtextDocument, Issue issue, String newSpecifier) throws BadLocationException {
        int offset = issue.getOffset();
        int length = issue.getLength();
        iXtextDocument.replace(offset, length, newSpecifier);
    }
	
}
