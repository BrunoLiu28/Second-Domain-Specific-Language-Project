/*
 * generated by Xtext 2.34.0
 */
grammar InternalSimpleMio;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.SimpleMioGrammarAccess;

}

@parser::members {

 	private SimpleMioGrammarAccess grammarAccess;

    public InternalSimpleMioParser(TokenStream input, SimpleMioGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected SimpleMioGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getModelAccess().getModelAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getModelAccess().getProgramProgramParserRuleCall_1_0());
				}
				lv_program_1_0=ruleProgram
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModelRule());
					}
					set(
						$current,
						"program",
						lv_program_1_0,
						"org.xtext.example.mydsl.SimpleMio.Program");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getProgramAccess().getEventsEventParserRuleCall_0());
			}
			lv_events_0_0=ruleEvent
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getProgramRule());
				}
				add(
					$current,
					"events",
					lv_events_0_0,
					"org.xtext.example.mydsl.SimpleMio.Event");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleEvent
entryRuleEvent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEventRule()); }
	iv_ruleEvent=ruleEvent
	{ $current=$iv_ruleEvent.current; }
	EOF;

// Rule Event
ruleEvent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEventAccess().getEventAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getEventAccess().getConditionalsensorOrParserRuleCall_1_0());
				}
				lv_conditionalsensor_1_0=ruleOr
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventRule());
					}
					set(
						$current,
						"conditionalsensor",
						lv_conditionalsensor_1_0,
						"org.xtext.example.mydsl.SimpleMio.Or");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='->'
		{
			newLeafNode(otherlv_2, grammarAccess.getEventAccess().getHyphenMinusGreaterThanSignKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEventAccess().getActionsActionParserRuleCall_3_0());
				}
				lv_actions_3_0=ruleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEventRule());
					}
					add(
						$current,
						"actions",
						lv_actions_3_0,
						"org.xtext.example.mydsl.SimpleMio.Action");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_4=','
			{
				newLeafNode(otherlv_4, grammarAccess.getEventAccess().getCommaKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getEventAccess().getActionsActionParserRuleCall_4_1_0());
					}
					lv_actions_5_0=ruleAction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getEventRule());
						}
						add(
							$current,
							"actions",
							lv_actions_5_0,
							"org.xtext.example.mydsl.SimpleMio.Action");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAction
entryRuleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getActionRule()); }
	iv_ruleAction=ruleAction
	{ $current=$iv_ruleAction.current; }
	EOF;

// Rule Action
ruleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getActionAccess().getActionAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_actionName_1_1='move'
					{
						newLeafNode(lv_actionName_1_1, grammarAccess.getActionAccess().getActionNameMoveKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "actionName", lv_actionName_1_1, null);
					}
					    |
					lv_actionName_1_2='led'
					{
						newLeafNode(lv_actionName_1_2, grammarAccess.getActionAccess().getActionNameLedKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "actionName", lv_actionName_1_2, null);
					}
					    |
					lv_actionName_1_3='turn'
					{
						newLeafNode(lv_actionName_1_3, grammarAccess.getActionAccess().getActionNameTurnKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "actionName", lv_actionName_1_3, null);
					}
					    |
					lv_actionName_1_4='stop'
					{
						newLeafNode(lv_actionName_1_4, grammarAccess.getActionAccess().getActionNameStopKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "actionName", lv_actionName_1_4, null);
					}
				)
			)
		)
		(
			(
				(
					lv_actionSpecifier_2_1='left'
					{
						newLeafNode(lv_actionSpecifier_2_1, grammarAccess.getActionAccess().getActionSpecifierLeftKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "actionSpecifier", lv_actionSpecifier_2_1, null);
					}
					    |
					lv_actionSpecifier_2_2='right'
					{
						newLeafNode(lv_actionSpecifier_2_2, grammarAccess.getActionAccess().getActionSpecifierRightKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "actionSpecifier", lv_actionSpecifier_2_2, null);
					}
					    |
					lv_actionSpecifier_2_3='forward'
					{
						newLeafNode(lv_actionSpecifier_2_3, grammarAccess.getActionAccess().getActionSpecifierForwardKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "actionSpecifier", lv_actionSpecifier_2_3, null);
					}
					    |
					lv_actionSpecifier_2_4='backward'
					{
						newLeafNode(lv_actionSpecifier_2_4, grammarAccess.getActionAccess().getActionSpecifierBackwardKeyword_2_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "actionSpecifier", lv_actionSpecifier_2_4, null);
					}
					    |
					lv_actionSpecifier_2_5='red'
					{
						newLeafNode(lv_actionSpecifier_2_5, grammarAccess.getActionAccess().getActionSpecifierRedKeyword_2_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "actionSpecifier", lv_actionSpecifier_2_5, null);
					}
					    |
					lv_actionSpecifier_2_6='green'
					{
						newLeafNode(lv_actionSpecifier_2_6, grammarAccess.getActionAccess().getActionSpecifierGreenKeyword_2_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "actionSpecifier", lv_actionSpecifier_2_6, null);
					}
					    |
					lv_actionSpecifier_2_7='blue'
					{
						newLeafNode(lv_actionSpecifier_2_7, grammarAccess.getActionAccess().getActionSpecifierBlueKeyword_2_0_6());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "actionSpecifier", lv_actionSpecifier_2_7, null);
					}
					    |
					lv_actionSpecifier_2_8='off'
					{
						newLeafNode(lv_actionSpecifier_2_8, grammarAccess.getActionAccess().getActionSpecifierOffKeyword_2_0_7());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getActionRule());
						}
						setWithLastConsumed($current, "actionSpecifier", lv_actionSpecifier_2_8, null);
					}
				)
			)
		)?
		(
			otherlv_3='@'
			{
				newLeafNode(otherlv_3, grammarAccess.getActionAccess().getCommercialAtKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getActionAccess().getStrengthEIntParserRuleCall_3_1_0());
					}
					lv_strength_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getActionRule());
						}
						set(
							$current,
							"strength",
							lv_strength_4_0,
							"org.xtext.example.mydsl.SimpleMio.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOrAccess().getAndParserRuleCall_0());
		}
		this_And_0=ruleAnd
		{
			$current = $this_And_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getOrAccess().getOrLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='or'
			{
				newLeafNode(otherlv_2, grammarAccess.getOrAccess().getOrKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrAccess().getRightAndParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.SimpleMio.And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAndAccess().getNotParserRuleCall_0());
		}
		this_Not_0=ruleNot
		{
			$current = $this_Not_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				{
					$current = forceCreateModelElementAndSet(
						grammarAccess.getAndAccess().getAndLeftAction_1_0(),
						$current);
				}
			)
			otherlv_2='and'
			{
				newLeafNode(otherlv_2, grammarAccess.getAndAccess().getAndKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getRightNotParserRuleCall_1_2_0());
					}
					lv_right_3_0=ruleNot
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						set(
							$current,
							"right",
							lv_right_3_0,
							"org.xtext.example.mydsl.SimpleMio.Not");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleNot
entryRuleNot returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNotRule()); }
	iv_ruleNot=ruleNot
	{ $current=$iv_ruleNot.current; }
	EOF;

// Rule Not
ruleNot returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNotAccess().getNotAction_0_0(),
						$current);
				}
			)
			(
				otherlv_1='not'
				{
					newLeafNode(otherlv_1, grammarAccess.getNotAccess().getNotKeyword_0_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNotAccess().getConditionalsensorParenParserRuleCall_0_1_1_0());
						}
						lv_conditionalsensor_2_0=ruleParen
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNotRule());
							}
							set(
								$current,
								"conditionalsensor",
								lv_conditionalsensor_2_0,
								"org.xtext.example.mydsl.SimpleMio.Paren");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		(
			(
				{
					$current = forceCreateModelElement(
						grammarAccess.getNotAccess().getNotAction_1_0(),
						$current);
				}
			)
			(
				otherlv_4='not'
				{
					newLeafNode(otherlv_4, grammarAccess.getNotAccess().getNotKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getNotAccess().getConditionalsensorSensorParserRuleCall_1_1_1_0());
						}
						lv_conditionalsensor_5_0=ruleSensor
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNotRule());
							}
							set(
								$current,
								"conditionalsensor",
								lv_conditionalsensor_5_0,
								"org.xtext.example.mydsl.SimpleMio.Sensor");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
		    |
		{
			newCompositeNode(grammarAccess.getNotAccess().getSensorParserRuleCall_2());
		}
		this_Sensor_6=ruleSensor
		{
			$current = $this_Sensor_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getNotAccess().getParenParserRuleCall_3());
		}
		this_Paren_7=ruleParen
		{
			$current = $this_Paren_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleParen
entryRuleParen returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParenRule()); }
	iv_ruleParen=ruleParen
	{ $current=$iv_ruleParen.current; }
	EOF;

// Rule Paren
ruleParen returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParenAccess().getLeftParenthesisKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getParenAccess().getOrParserRuleCall_1());
		}
		this_Or_1=ruleOr
		{
			$current = $this_Or_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getParenAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSensorAccess().getSensorAction_0(),
					$current);
			}
		)
		(
			(
				(
					lv_sensorName_1_1='obstacle'
					{
						newLeafNode(lv_sensorName_1_1, grammarAccess.getSensorAccess().getSensorNameObstacleKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						setWithLastConsumed($current, "sensorName", lv_sensorName_1_1, null);
					}
					    |
					lv_sensorName_1_2='sound'
					{
						newLeafNode(lv_sensorName_1_2, grammarAccess.getSensorAccess().getSensorNameSoundKeyword_1_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						setWithLastConsumed($current, "sensorName", lv_sensorName_1_2, null);
					}
					    |
					lv_sensorName_1_3='line'
					{
						newLeafNode(lv_sensorName_1_3, grammarAccess.getSensorAccess().getSensorNameLineKeyword_1_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						setWithLastConsumed($current, "sensorName", lv_sensorName_1_3, null);
					}
					    |
					lv_sensorName_1_4='button'
					{
						newLeafNode(lv_sensorName_1_4, grammarAccess.getSensorAccess().getSensorNameButtonKeyword_1_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						setWithLastConsumed($current, "sensorName", lv_sensorName_1_4, null);
					}
					    |
					lv_sensorName_1_5='motor'
					{
						newLeafNode(lv_sensorName_1_5, grammarAccess.getSensorAccess().getSensorNameMotorKeyword_1_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						setWithLastConsumed($current, "sensorName", lv_sensorName_1_5, null);
					}
				)
			)
		)
		(
			(
				(
					lv_sensorSpecifier_2_1='front'
					{
						newLeafNode(lv_sensorSpecifier_2_1, grammarAccess.getSensorAccess().getSensorSpecifierFrontKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						setWithLastConsumed($current, "sensorSpecifier", lv_sensorSpecifier_2_1, null);
					}
					    |
					lv_sensorSpecifier_2_2='back'
					{
						newLeafNode(lv_sensorSpecifier_2_2, grammarAccess.getSensorAccess().getSensorSpecifierBackKeyword_2_0_1());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						setWithLastConsumed($current, "sensorSpecifier", lv_sensorSpecifier_2_2, null);
					}
					    |
					lv_sensorSpecifier_2_3='left'
					{
						newLeafNode(lv_sensorSpecifier_2_3, grammarAccess.getSensorAccess().getSensorSpecifierLeftKeyword_2_0_2());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						setWithLastConsumed($current, "sensorSpecifier", lv_sensorSpecifier_2_3, null);
					}
					    |
					lv_sensorSpecifier_2_4='right'
					{
						newLeafNode(lv_sensorSpecifier_2_4, grammarAccess.getSensorAccess().getSensorSpecifierRightKeyword_2_0_3());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						setWithLastConsumed($current, "sensorSpecifier", lv_sensorSpecifier_2_4, null);
					}
					    |
					lv_sensorSpecifier_2_5='up'
					{
						newLeafNode(lv_sensorSpecifier_2_5, grammarAccess.getSensorAccess().getSensorSpecifierUpKeyword_2_0_4());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						setWithLastConsumed($current, "sensorSpecifier", lv_sensorSpecifier_2_5, null);
					}
					    |
					lv_sensorSpecifier_2_6='down'
					{
						newLeafNode(lv_sensorSpecifier_2_6, grammarAccess.getSensorAccess().getSensorSpecifierDownKeyword_2_0_5());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						setWithLastConsumed($current, "sensorSpecifier", lv_sensorSpecifier_2_6, null);
					}
					    |
					lv_sensorSpecifier_2_7='center'
					{
						newLeafNode(lv_sensorSpecifier_2_7, grammarAccess.getSensorAccess().getSensorSpecifierCenterKeyword_2_0_6());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorRule());
						}
						setWithLastConsumed($current, "sensorSpecifier", lv_sensorSpecifier_2_7, null);
					}
				)
			)
		)?
		(
			otherlv_3='@'
			{
				newLeafNode(otherlv_3, grammarAccess.getSensorAccess().getCommercialAtKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSensorAccess().getStrengthEIntParserRuleCall_3_1_0());
					}
					lv_strength_4_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSensorRule());
						}
						set(
							$current,
							"strength",
							lv_strength_4_0,
							"org.xtext.example.mydsl.SimpleMio.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

RULE_SL_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
