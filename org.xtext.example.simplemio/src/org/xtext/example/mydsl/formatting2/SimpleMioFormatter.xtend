/*
 * generated by Xtext 2.32.0
 */
package org.xtext.example.mydsl.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.mydsl.services.SimpleMioGrammarAccess
import simplemioModel.Model
import simplemioModel.Program

class SimpleMioFormatter extends AbstractFormatter2 {
	
	@Inject extension SimpleMioGrammarAccess

	def dispatch void format(Model model, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		model.program.format
	}

	def dispatch void format(Program program, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (event : program.events) {
			event.format
		}
	}
	
	// TODO: implement for Event, Or, And, Not
}
